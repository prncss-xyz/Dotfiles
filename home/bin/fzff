#!/usr/bin/env sh
local cols sep
cols=$(( COLUMNS / 3 ))
sep='{::}'
tmpfile=$(mktemp /tmp/ffhist.XXXXX)
cp -f ~/.mozilla/firefox/*/places.sqlite $tmpfile
sqlite3 -separator $sep $tmpfile \
"select substr(title, 1, $cols), url from moz_places
where url not like '%google%search%'
order by
visit_count desc,
last_visit_date desc;" |
awk -F $sep '{printf "%-'$cols's \x1b[36m%s\x1b[m\n", $1, $2}' |
fzf --ansi --multi | sed 's#.*\(https*://\)#\1#'

#!/usr/bin/env bash

# Relying on rofi / fzf is a bit limited

# e.g
# umenu "places.sqlite" "rofi -dmenu --no-sort"
# umenu "places.sqlite" "fzf --no-sort --exact"

DB_PATH=${1:?ARG 1: path to firefox database}

FINDER=${2:?ARG 2: fzf or rofi}

QUERY="
SELECT
    url, title FROM moz_places
WHERE
    url NOT LIKE '%google%search%'
ORDER BY
    visit_count DESC,
    last_visit_date DESC;
"

SEP="âˆ™"

ENTRY=$(
sqlite3 "$DB_PATH" "$QUERY" | \
    sed -E 's/^https?:\/\///' | \
    sed -E "s/\\/?\\|/ $SEP /" | \
    sed -E "s/$SEP $//" | \
    $FINDER
)

URL=$( echo "$ENTRY" | sed "s/$SEP.*//g" )

if [ "$URL" = "" ]; then
    exit 0
fi

# google search if input end with .
if [ "${URL: -1}" = "." ]; then
    SEARCH="${URL:: -1}"
    URL="google.com/search?q=$SEARCH"
fi

case $(uname) in
    'Linux')
        xdg-open "https://$URL"
        ;;
    'Darwin')
        open "https://$URL"
        ;;
esac
