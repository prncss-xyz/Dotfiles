# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
#set $seat seat0
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
### Output configuration
output DP-1 scale 2
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
# TODO volume luminosity launchers code gnome-keyring 
exec kitty --title=scratchpad
exec ~/bin/browser
exec gnome-keyring-daemon --start
exec ~/bin/setbg-sway
exec mako
exec kdeconnect-app
exec kdeconnect-sms
# exec ulauncher
# exec albert
# exec ~/bin/keepassxc-unlock

seat * hide_cursor 10000
# chromium --enable-features=UseOzonePlatform --ozone-platform=wayland --remote-debugging-port=9222
# bindsym $mod+n [class="Joplin"] scratchpad show
# assign [class="Joplin"] scratchpad

# KeePassXC Firefox Joplin

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
  xkb_layout ca
  xkb_variant multi
}


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+t exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10

# TODO: toogle focus
# bindsym $mod+o [app_id="org.keepassxc.KeePassXC"] focus
bindsym $mod+o [app_id="org.keepassxc.KeePassXC"] scratchpad show
for_window [app_id="org.keepassxc.KeePassXC"] {
  move scratchpad
}
bindsym $mod+Return [title="scratchpad"] scratchpad show
for_window [title="scratchpad"] {
  move scratchpad
}
for_window [app_id="org\.kde\.kdeconnect\.app"] {
  move scratchpad
}
for_window [app_id="org\.kde\.kdeconnect\.sms"] {
  move scratchpad
}

# set $menu exec $term --class=launcher -e sway-launcher-desktop
# set $menu exec /usr/bin/sway-launcher-desktop

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exit
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Brightness control
# XF86MonBrightnessUp         exec light -A 1%
# XF86MonBrightnessDown       exec light -U 1%
# Shift+XF86MonBrightnessUp   exec light -A 5%
#

# Media control
bindsym XF86AudioPlay exec playerctl --player playerctld play-pause
bindsym XF86AudioNext exec playerctl --player playerctld next
bindsym XF86AudioPrev exec playerctl --player playerctld previous
bindsym XF86AudioMute        exec pamixer -t
bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym XF86AudioLowerVolume exec pamixer -d 5

mode "audio" {
  bindsym space exec playerctl --player playerctld play-pause
  bindsym $left exec playerctl --player playerctld next
  bindsym $right exec playerctl --player playerctld previous
  bindsym m   exec pamixer -t
  bindsym $up exec pamixer -i 5
  bindsym $down exec pamixer -d 5
  bindsym Escape mode "default"
}
bindsym $mod+p mode "audio"

#mode "mouse"
#  bindsym $right seat $seat cursor move +10 0
#  bindsym $left seat $seat cursor move -10 0
#  bindsym $up seat $seat cursor move 0 -10
#  bindsym $down seat $seat cursor move 0 +10
#  bindsym Escape mode "default"
#}
#bindsym $mod+m mode "mouse"

mode "launchers" {
  bindsym 1 exec chromium, mode "default"
  bindsym 2 exec firefox, mode "default"
  bindsym Escape mode "default"
# ...
}
bindsym $mod+i mode "launchers"


# switching source
# $win+Shift+Left      exec pamixer -d 5 --source alsa_input.pci-0000_00_1f.3.analog-stereo

# 0	alsa_output.usb-MICROMEGA_MICROMEGA_MYDAC_0000-00.iec958-stereo	module-alsa-card.c	s32le 2ch 48000Hz	RUNNING
# 2	alsa_output.pci-0000_00_1f.3.analog-stereo	module-alsa-card.c	s16le 2ch 44100Hz	SUSPENDED

gaps inner 10
gaps outer 5
smart_gaps off
default_border pixel 3

# 
# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #ffff00
client.focused_inactive #333333 #5f676a #ffffff #484e50   #333300
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %H:%M'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}


# Load host-specific configs
# include "~/.config/sway/$(cut -d'-' -f1 /etc/hostname).conf"

include /etc/sway/config.d/*
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"
